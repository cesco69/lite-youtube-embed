[Info] Successfully preconnected to https://www.youtube-nocookie.com/
[Info] Successfully preconnected to https://www.google.com/
[Info] Successfully preconnected to https://googleads.g.doubleclick.net/
[Info] Successfully preconnected to https://static.doubleclick.net/
[Log] lyte - fetching yt player api (lite-yt-embed.js, line 117)
[Log] ytplayer new (lite-yt-embed.js, line 125)
[Log] HTMLMediaElement::HTMLMediaElement(SOMEID)
[Log] HTMLVideoElementPictureInPicture::HTMLVideoElementPictureInPicture(SOMEID)
[Log] HTMLMediaElement::setMuted(SOMEID) true
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) task scheduled
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequireUserGestureForFullscreen
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequirePageConsentToLoadMedia
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequireUserGestureToAutoplayToExternalDevice
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequireUserGestureToControlControlsManager
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequirePlaybackToControlControlsManager
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding InvisibleAutoplayNotPermitted
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequireUserGestureForAudioRateChange
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequireUserGestureToShowPlaybackTargetPicker
[Log] MediaSession::MediaSession(SOMEID)
[Log] MediaElementSession::clientWillBeginAutoplaying(SOMEID) state = Idle
[Log] MediaElementSession::setState(SOMEID) Autoplaying
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Log] HTMLMediaElement::HTMLMediaElement(SOMEID)
[Log] HTMLVideoElementPictureInPicture::HTMLVideoElementPictureInPicture(SOMEID)
[Log] HTMLMediaElement::setMuted(SOMEID) false
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Log] HTMLMediaElement::setMuted(SOMEID) false
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) task scheduled
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequireUserGestureForFullscreen
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequirePageConsentToLoadMedia
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequireUserGestureToAutoplayToExternalDevice
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequireUserGestureToControlControlsManager
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequirePlaybackToControlControlsManager
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding InvisibleAutoplayNotPermitted
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequireUserGestureForAudioRateChange
[Info] MediaElementSession::addBehaviorRestriction(SOMEID) adding RequireUserGestureToShowPlaybackTargetPicker
[Log] MediaElementSession::clientWillBeginAutoplaying(SOMEID) state = Idle
[Log] MediaElementSession::setState(SOMEID) Autoplaying
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Log] HTMLMediaElement::setMuted(SOMEID) true
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Log] HTMLMediaElement::setVolume(SOMEID) 1
[Log] HTMLMediaElement::insertedIntoAncestor(SOMEID)
[Log] HTMLMediaElement::didFinishInsertingNode(SOMEID)
[Log] HTMLMediaElement::setControls(SOMEID) false
[Info] HTMLMediaElement::load(SOMEID)
[Log] HTMLMediaElement::prepareForLoad(SOMEID) gesture = false
[Info] HTMLMediaElement::createMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::addSession(0) (SOMEID)
[Info] HTMLMediaElement::cancelPendingEventsAndCallbacks(SOMEID)
[Log] HTMLMediaElement::setPlaybackRate(SOMEID) 1
[Log] MediaElementSession::clientWillBeginAutoplaying(SOMEID) state = Autoplaying
[Log] HTMLMediaElement::setShouldDelayLoadEvent(SOMEID) true
[Info] MediaElementSession::removeBehaviorRestriction(SOMEID) removed RequirePageConsentToLoadMedia
[Log] HTMLMediaElement::setPlaybackRate(SOMEID) 1
[Info] MediaElementSession::setHasPlaybackTargetAvailabilityListeners(SOMEID) true
[Log] MediaSessionManageriOS::configureWireLessTargetMonitoring(0) requiresMonitoring = true
[Log] HTMLMediaElement::addEventListener(SOMEID) 'webkitplaybacktargetavailabilitychanged'
[Info] MediaElementSession::hasWirelessPlaybackTargets(SOMEID) returning false
[Log] HTMLMediaElement::enqueuePlaybackTargetAvailabilityChangedEvent(SOMEID) hasTargets = false
[Info] HTMLMediaElement::load(SOMEID)
[Log] HTMLMediaElement::prepareForLoad(SOMEID) gesture = false
[Info] HTMLMediaElement::createMediaPlayer(SOMEID)
[Info] MediaElementSession::setHasPlaybackTargetAvailabilityListeners(SOMEID) true
[Info] MediaElementSession::hasWirelessPlaybackTargets(SOMEID) returning false
[Log] HTMLMediaElement::enqueuePlaybackTargetAvailabilityChangedEvent(SOMEID) hasTargets = false
[Info] HTMLMediaElement::cancelPendingEventsAndCallbacks(SOMEID)
[Log] HTMLMediaElement::setPlaybackRate(SOMEID) 1
[Log] MediaElementSession::clientWillBeginAutoplaying(SOMEID) state = Autoplaying
[Log] HTMLMediaElement::setPlaybackRate(SOMEID) 1
[Log] HTMLMediaElement::setControls(SOMEID) false
[Log] MediaSession::setPlaybackState(SOMEID) playing
[Log] MediaSession::setActionHandler(SOMEID) adding play
[Log] MediaSession::setActionHandler(SOMEID) adding pause
[Log] MediaSession::setActionHandler(SOMEID) adding seekbackward
[Log] MediaSession::setActionHandler(SOMEID) adding seekforward
[Log] MediaSession::setMetadata(SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(1), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(1), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) volumechange
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) lambda(), task fired
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) volumechange
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) lambda(), task fired
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning true because media engine says so
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning true because media engine says so
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) volumechange
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) emptied
[Log] HTMLMediaElement::selectMediaResource(SOMEID) lambda(), task fired
[Log] HTMLMediaElement::setShouldDelayLoadEvent(SOMEID) false
[Log] HTMLMediaElement::selectMediaResource(SOMEID) nothing to load
[Info] HTMLMediaElement::prepareToPlay(SOMEID)
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Log] MediaSessionManageriOS::externalOutputDeviceAvailableDidChange(0) 1
[Info] MediaElementSession::externalOutputDeviceAvailableDidChange(SOMEID) true
[Log] HTMLMediaElement::setMuted(SOMEID) false
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning true because media engine says so
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) task scheduled
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(1), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Log] HTMLMediaElement::setMuted(SOMEID) false
[Log] HTMLMediaElement::setMuted(SOMEID) true
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning true because media engine says so
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(1), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Log] HTMLMediaElement::setVolume(SOMEID) 1
[Info] HTMLMediaElement::load(SOMEID)
[Log] HTMLMediaElement::prepareForLoad(SOMEID) gesture = false
[Info] HTMLMediaElement::createMediaPlayer(SOMEID)
[Info] MediaElementSession::setHasPlaybackTargetAvailabilityListeners(SOMEID) true
[Info] MediaElementSession::hasWirelessPlaybackTargets(SOMEID) returning true
[Log] HTMLMediaElement::enqueuePlaybackTargetAvailabilityChangedEvent(SOMEID) hasTargets = true
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) task scheduled
[Info] HTMLMediaElement::cancelPendingEventsAndCallbacks(SOMEID)
[Log] HTMLMediaElement::setPlaybackRate(SOMEID) 1
[Log] MediaElementSession::clientWillBeginAutoplaying(SOMEID) state = Autoplaying
[Log] HTMLMediaElement::setShouldDelayLoadEvent(SOMEID) true
[Log] HTMLMediaElement::setPlaybackRate(SOMEID) 1
[Debug] MediaSource::addedToRegistry(0)
[Log] HTMLMediaElement::prepareForLoad(SOMEID) gesture = false
[Info] HTMLMediaElement::createMediaPlayer(SOMEID)
[Info] MediaElementSession::setHasPlaybackTargetAvailabilityListeners(SOMEID) true
[Info] MediaElementSession::hasWirelessPlaybackTargets(SOMEID) returning true
[Log] HTMLMediaElement::enqueuePlaybackTargetAvailabilityChangedEvent(SOMEID) hasTargets = true
[Info] HTMLMediaElement::cancelPendingEventsAndCallbacks(SOMEID)
[Log] HTMLMediaElement::setPlaybackRate(SOMEID) 1
[Log] MediaElementSession::clientWillBeginAutoplaying(SOMEID) state = Autoplaying
[Log] HTMLMediaElement::play(SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] HTMLMediaElement::playInternal(SOMEID)
[Log] MediaElementSession::clientWillBeginPlayback(SOMEID) state = Autoplaying
[Log] MediaSessionManageriOS::setCurrentSession(0) (SOMEID)
[Log] MediaSessionManageriOS::sessionWillBeginPlayback(0) (SOMEID) returning true
[Log] MediaSessionManageriOS::sessionWillBeginPlayback(0) Playback Target Supports AirPlay Video = false
[Info] MediaElementSession::setShouldPlayToPlaybackTarget(SOMEID) false
[Log] MediaElementSession::setState(SOMEID) Playing
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(1), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] HTMLMediaElement::setShowPosterFlag(SOMEID) false
[Log] HTMLMediaElement::setAutoplayEventPlaybackState(SOMEID) StartedWithoutUserGesture
[Log] HTMLMediaElement::updatePlayState(SOMEID) shouldBePlaying = false, playerPaused = true
[Info] HTMLMediaElement::prepareToPlay(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(1), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::setMuted(SOMEID) false
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning true because media engine says so
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(1), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Log] HTMLMediaElement::setMuted(SOMEID) false
[Log] HTMLMediaElement::setMuted(SOMEID) true
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning true because media engine says so
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(1), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Log] HTMLMediaElement::setVolume(SOMEID) 1
[Log] MediaSession::setActionHandler(SOMEID) adding play
[Log] MediaSession::setActionHandler(SOMEID) adding pause
[Log] MediaSession::setActionHandler(SOMEID) adding seekbackward
[Log] MediaSession::setActionHandler(SOMEID) adding seekforward
[Log] MediaSession::setMetadata(SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) volumechange
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) lambda(), task fired
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) volumechange
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) lambda(), task fired
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning true because media engine says so
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) emptied
[Log] HTMLMediaElement::selectMediaResource(SOMEID) lambda(), task fired
[Info] HTMLMediaElement::loadResource(SOMEID) [url] – {containerType: "", codecs: "codecs", profiles: "profiles"}
[Info] HTMLMediaElement::loadResource(SOMEID) m_currentSrc is [url]
[Log] HTMLMediaElement::loadResource(SOMEID) loading MSE blob
[Log] HTMLMediaElement::mediaPlayerRenderingModeChanged(SOMEID)
[Log] HTMLMediaElement::mediaPlayerEngineUpdated(SOMEID)
[Log] HTMLMediaElement::scheduleMediaEngineWasUpdated(SOMEID) task scheduled
[Log] HTMLMediaElement::mediaPlayerRenderingModeChanged(SOMEID)
[Log] HTMLMediaElement::selectMediaResource(SOMEID) using 'src' attribute url
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) play
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) waiting
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) volumechange
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) volumechange
[Info] MediaElementSession::hasWirelessPlaybackTargets(SOMEID) returning true
[Info] MediaElementSession::hasWirelessPlaybackTargets(SOMEID) returning true
[Log] HTMLMediaElement::enqueuePlaybackTargetAvailabilityChangedEvent(SOMEID) hasTargets = true
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) task scheduled
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) loadstart
[Log] HTMLMediaElement::scheduleMediaEngineWasUpdated(SOMEID) lambda(), task fired
[Log] HTMLMediaElement::mediaEngineWasUpdated(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::mediaEngineUpdated(SOMEID)
[Log] VideoLayerManagerObjC::setVideoFullscreenFrame(SOMEID) 0, 0, 0, 0
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) webkitplaybacktargetavailabilitychanged
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) lambda(), task fired
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] HTMLMediaElement::mediaPlayerRenderingModeChanged(SOMEID)
[Log] VideoLayerManagerObjC::didDestroyVideoLayer(SOMEID)
[Log] VideoLayerManagerObjC::setTextTrackRepresentationLayer(SOMEID)
[Log] HTMLMediaElement::mediaPlayerEngineUpdated(SOMEID)
[Log] HTMLMediaElement::scheduleMediaEngineWasUpdated(SOMEID) task scheduled
[Log] MediaSource::setLogIdentifier(SOMEID)
[Debug] MediaSource::setPrivateAndOpen(SOMEID)
[Log] HTMLMediaElement::setShouldDelayLoadEvent(SOMEID) false
[Log] MediaSource::onReadyStateChange(SOMEID) old state = closed, new state = open
[Debug] MediaSource::scheduleEvent(SOMEID) scheduling 'sourceopen'
[Log] HTMLMediaElement::scheduleMediaEngineWasUpdated(SOMEID) lambda(), task fired
[Log] HTMLMediaElement::mediaEngineWasUpdated(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::mediaEngineUpdated(SOMEID)
[Log] VideoLayerManagerObjC::setVideoFullscreenFrame(SOMEID) 0, 0, 0, 0
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) task scheduled
[Log] MediaSource::setDuration(SOMEID) 6392
[Log] MediaSource::setDurationInternal(SOMEID)  – {value: 6392}
[Debug] MediaSource::addSourceBuffer(SOMEID) audio/webm; codecs="opus"
[Log] SourceBuffer::SourceBuffer(SOMEID)
[Debug] MediaSource::addSourceBuffer(SOMEID) created SourceBuffer
[Debug] MediaSource::addSourceBuffer(SOMEID) video/webm; codecs="vp09.00.51.08.01.01.01.01.00"
[Log] SourceBuffer::SourceBuffer(SOMEID)
[Debug] MediaSource::addSourceBuffer(SOMEID) created SourceBuffer
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] VideoLayerManagerObjC::setVideoLayer(SOMEID) 810, 405
[Log] HTMLMediaElement::mediaPlayerRenderingModeChanged(SOMEID)
[Log] HTMLMediaElement::mediaPlayerRenderingModeChanged(SOMEID)
[Log] HTMLMediaElement::mediaPlayerEngineUpdated(SOMEID) AVFoundation MediaSource Engine
[Log] HTMLMediaElement::scheduleMediaEngineWasUpdated(SOMEID) task scheduled
[Log] HTMLMediaElement::mediaPlayerCharacteristicChanged(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(1), Audio(0), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Log] HTMLMediaElement::mediaPlayerDurationChanged(SOMEID) duration =  (3)
{invalid: true, numerator: -1, denominator: 1, flags: 0}
", current time = "
{value: 0, numerator: 0, denominator: 1, flags: 1}
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::mediaPlayerRenderingModeChanged(SOMEID)
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) lambda(), task fired
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] HTMLMediaElement::scheduleMediaEngineWasUpdated(SOMEID) lambda(), task fired
[Log] HTMLMediaElement::mediaEngineWasUpdated(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::mediaEngineUpdated(SOMEID)
[Log] VideoLayerManagerObjC::setVideoFullscreenFrame(SOMEID) 0, 0, 0, 0
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) task scheduled
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) durationchange
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) lambda(), task fired
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] SourceBuffer::sourceBufferPrivateDidReceiveInitializationSegment(SOMEID)
[Log] SourceBuffer::sourceBufferPrivateDidReceiveInitializationSegment(SOMEID)
[Log] HTMLMediaElement::setReadyState(SOMEID) new state = HaveMetadata, current state = HAVE_NOTHING
[Info] MediaElementSession::hasWirelessPlaybackTargets(SOMEID) returning true
[Log] HTMLMediaElement::enqueuePlaybackTargetAvailabilityChangedEvent(SOMEID) hasTargets = true
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) task scheduled
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] HTMLMediaElement::updatePlayState(SOMEID) shouldBePlaying = false, playerPaused = true
[Info] HTMLMediaElement::prepareToPlay(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(1), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) durationchange
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) resize
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) loadedmetadata
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) webkitplaybacktargetavailabilitychanged
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) lambda(), task fired
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(1), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = None, policy = Default, previous category = None
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: no audio
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] HTMLMediaElement::mediaPlayerCharacteristicChanged(SOMEID)
[Info] HTMLMediaElement::markCaptionAndSubtitleTracksAsUnconfigured(SOMEID)
[Log] HTMLMediaElement::scheduleConfigureTextTracks(SOMEID) task scheduled
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Log] HTMLMediaElement::pauseInternal(SOMEID)
[Log] MediaElementSession::clientWillPausePlayback(SOMEID)
[Log] MediaElementSession::processClientWillPausePlayback(SOMEID) state = Playing
[Log] MediaElementSession::setState(SOMEID) Paused
[Log] MediaSessionManageriOS::sessionWillEndPlayback(0) (SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] HTMLMediaElement::setAutoplayEventPlaybackState(SOMEID) None
[Log] HTMLMediaElement::updatePlayState(SOMEID) shouldBePlaying = false, playerPaused = true
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(1), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = None
[Log] HTMLMediaElement::setAutoplayEventPlaybackState(SOMEID) PreventedAutoplay
[Log] HTMLMediaElement::dispatchPlayPauseEventsIfNeedsQuirks(SOMEID)
[Log] HTMLMediaElement::handleAutoplayEvent(SOMEID) hasAudio = true wasPlaybackPrevented = true hasMainContent = false
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(1), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Log] HTMLMediaElement::mediaPlayerCharacteristicChanged(SOMEID)
[Info] HTMLMediaElement::markCaptionAndSubtitleTracksAsUnconfigured(SOMEID)
[Log] HTMLMediaElement::scheduleConfigureTextTracks(SOMEID) task scheduled
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(1), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Log] HTMLMediaElement::setControls(SOMEID) false
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) pause
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) playing
[Log] HTMLMediaElement::setControls(SOMEID) false
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSession::setPlaybackState(SOMEID) playing
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) pause
[Log] HTMLMediaElement::setControls(SOMEID) false
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSession::setPlaybackState(SOMEID) paused
[Log] HTMLMediaElement::scheduleConfigureTextTracks(SOMEID) lambda(), task fired
[Info] HTMLMediaElement::ensureMediaControlsInjectedScript(SOMEID)
[Info] HTMLMediaElement::didAddUserAgentShadowRoot(SOMEID)
[Info] HTMLMediaElement::ensureMediaControlsInjectedScript(SOMEID)
[Log] HTMLMediaElement::mediaPlayerRenderingModeChanged(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] HTMLMediaElement::webkitCurrentPlaybackTargetIsWireless(SOMEID) false
[Info] HTMLMediaElement::webkitCurrentPlaybackTargetIsWireless(SOMEID) false
[Info] HTMLMediaElement::webkitCurrentPlaybackTargetIsWireless(SOMEID) false
[Info] HTMLMediaElement::webkitCurrentPlaybackTargetIsWireless(SOMEID) false
[Info] HTMLMediaElement::setMediaControlsDependOnPageScaleFactor(SOMEID) true
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::configureTextTrackDisplay(SOMEID) CheckTextTrackVisibility
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(1), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(1), VideoAudio(0), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Log] HTMLMediaElement::mediaPlayerCharacteristicChanged(SOMEID)
[Info] HTMLMediaElement::markCaptionAndSubtitleTracksAsUnconfigured(SOMEID)
[Log] HTMLMediaElement::scheduleConfigureTextTracks(SOMEID) task scheduled
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Log] MediaSource::setDuration(SOMEID) 6391.801
[Log] MediaSource::setDurationInternal(SOMEID)  – {value: 6391.801}
[Log] HTMLMediaElement::scheduleConfigureTextTracks(SOMEID) lambda(), task fired
[Info] HTMLMediaElement::ensureMediaControlsInjectedScript(SOMEID)
[Log] HTMLMediaElement::configureTextTrackDisplay(SOMEID) CheckTextTrackVisibility
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Log] HTMLMediaElement::mediaPlayerCharacteristicChanged(SOMEID)
[Info] HTMLMediaElement::markCaptionAndSubtitleTracksAsUnconfigured(SOMEID)
[Log] HTMLMediaElement::scheduleConfigureTextTracks(SOMEID) task scheduled
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Log] HTMLMediaElement::mediaPlayerDurationChanged(SOMEID) duration =  (3)
{value: 6391.801}
", current time = "
{value: 0, numerator: 0, denominator: 1, flags: 1}
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Log] ytplayer onready – {target: eq, data: null} (lite-yt-embed.js, line 132)
{target: eq, data: null}Object
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) durationchange
[Log] HTMLMediaElement::setMuted(SOMEID) false
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) task scheduled
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Log] HTMLMediaElement::setMuted(SOMEID) false
[Log] HTMLMediaElement::setMuted(SOMEID) true
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Log] HTMLMediaElement::setVolume(SOMEID) 1
[Log] MediaSession::setActionHandler(SOMEID) adding play
[Log] MediaSession::setActionHandler(SOMEID) adding pause
[Log] MediaSession::setActionHandler(SOMEID) adding seekbackward
[Log] MediaSession::setActionHandler(SOMEID) adding seekforward
[Log] MediaSession::setMetadata(SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] HTMLMediaElement::scheduleConfigureTextTracks(SOMEID) lambda(), task fired
[Info] HTMLMediaElement::ensureMediaControlsInjectedScript(SOMEID)
[Log] HTMLMediaElement::configureTextTrackDisplay(SOMEID) CheckTextTrackVisibility
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) volumechange
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) lambda(), task fired
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) volumechange
[Log] HTMLMediaElement::play(SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Log] HTMLMediaElement::setAutoplayEventPlaybackState(SOMEID) PreventedAutoplay
[Log] HTMLMediaElement::dispatchPlayPauseEventsIfNeedsQuirks(SOMEID)
[Log] HTMLMediaElement::handleAutoplayEvent(SOMEID) hasAudio = true wasPlaybackPrevented = true hasMainContent = false
[Error] HTMLMediaElement::play(SOMEID) rejecting promise: UserGestureRequired
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) playing
[Log] HTMLMediaElement::setControls(SOMEID) false
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSession::setPlaybackState(SOMEID) playing
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) pause
[Log] HTMLMediaElement::setControls(SOMEID) false
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSession::setPlaybackState(SOMEID) paused
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] ytplayer statechange – {target: eq, data: 1} (www-widgetapi.js, line 475)
{target: eq, data: 1}Object
[Log] ytplayer statechange – {target: eq, data: 2} (www-widgetapi.js, line 475)
{target: eq, data: 2}Object
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::clientDataBufferingTimerFired(SOMEID) visible = false
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Log] HTMLMediaElement::setMuted(SOMEID) false
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) task scheduled
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Log] HTMLMediaElement::setMuted(SOMEID) false
[Log] HTMLMediaElement::setMuted(SOMEID) true
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) m_readyState != HAVE_ENOUGH_DATA
[Info] MediaElementSession::wirelessVideoPlaybackDisabled(SOMEID) returning false because media engine says so
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Log] HTMLMediaElement::setVolume(SOMEID) 1
[Log] MediaSession::setActionHandler(SOMEID) adding play
[Log] MediaSession::setActionHandler(SOMEID) adding pause
[Log] MediaSession::setActionHandler(SOMEID) adding seekbackward
[Log] MediaSession::setActionHandler(SOMEID) adding seekforward
[Log] MediaSession::setMetadata(SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Log] MediaSessionManageriOS::clientCharacteristicsChanged(0) (SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) volumechange
[Log] HTMLMediaElement::scheduleUpdateMediaState(SOMEID) lambda(), task fired
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) volumechange
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::mediaPlayerSizeChanged(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::mediaPlayerFirstVideoFrameAvailable(SOMEID) m_showPoster = false
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) resize
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 0.674
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::setReadyState(SOMEID) new state = HaveFutureData, current state = HAVE_METADATA
[Log] HTMLMediaElement::updatePlayState(SOMEID) shouldBePlaying = false, playerPaused = true
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) loadeddata
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) canplay
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 0.8601068773159117
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 0.9858913452847509
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.3629139603044726
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.5680999999999996
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::setReadyState(SOMEID) new state = HaveEnoughData, current state = HAVE_FUTURE_DATA
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) !isAutoplaying
[Log] HTMLMediaElement::updatePlayState(SOMEID) shouldBePlaying = false, playerPaused = true
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) canplaythrough
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.556226642946224
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.7781199654044133
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.5439945523934078
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 2.071041053031252
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.5226626142915782
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 2.576224011812821
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.8818754564728128
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 3.004548559290696
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.8784162871014642
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 3.0490197642995587
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 2.234559195819657
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 3.4783333470434195
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 2.5745425018039043
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 3.932112197544831
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 2.7677708972042065
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 3.971880146763174
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 2.7368337343677327
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 4.3978868395525845
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) stalled
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) -1.2291147451739652
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) -3.5820245902138543
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) -0.19877383771567403
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) -3.49360071622167
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 0.8060400621167625
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::setReadyState(SOMEID) new state = HaveFutureData, current state = HAVE_ENOUGH_DATA
[Log] HTMLMediaElement::updatePlayState(SOMEID) shouldBePlaying = false, playerPaused = true
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) stalled
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) -0.7592331712941205
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 3.9091256354798243
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::setReadyState(SOMEID) new state = HaveEnoughData, current state = HAVE_FUTURE_DATA
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) !isAutoplaying
[Log] HTMLMediaElement::updatePlayState(SOMEID) shouldBePlaying = false, playerPaused = true
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) canplaythrough
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) -0.7484780956321505
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 4.400942267352588
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) -0.7386058909759242
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 4.8766907948623714
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) stalled
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 0.3893393041754095
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::setReadyState(SOMEID) new state = HaveFutureData, current state = HAVE_ENOUGH_DATA
[Log] HTMLMediaElement::updatePlayState(SOMEID) shouldBePlaying = false, playerPaused = true
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 0.9808132763109146
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 0.9779189494590926
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.352811956143605
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.3720876182917765
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::setReadyState(SOMEID) new state = HaveEnoughData, current state = HAVE_FUTURE_DATA
[Log] HTMLMediaElement::canTransitionFromAutoplayToPlay(SOMEID) !isAutoplaying
[Log] HTMLMediaElement::updatePlayState(SOMEID) shouldBePlaying = false, playerPaused = true
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::sessionCanProduceAudioChanged(0)
[Log] MediaSessionManageriOS::updateSessionState(0) types: AudioCapture(0), AudioTrack(0), Video(0), Audio(0), VideoAudio(1), WebAudio(0)
[Log] MediaSessionManageriOS::updateSessionState(0) setting category = MediaPlayback, policy = LongFormAudio, previous category = MediaPlayback
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) canplaythrough
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: playback not permitted
[Info] MediaElementSession::canShowControlsManager(SOMEID) returning FALSE: not in main frame
[Info] MediaElementSession::playbackStateChangePermitted(SOMEID) state = 0
[Log] MediaElementSession::playbackStateChangePermitted(SOMEID) Returning FALSE because a user gesture is required for audio rate change restriction
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.7178482098445813
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.8771461663344655
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.9175255836352039
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 1.8768100163846335
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 2.0722761744462344
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 2.3663169011746916
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 2.842495338123574
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 2.3323177979739973
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 3.7712704823768393
[Debug] SourceBuffer::monitorBufferingRate(SOMEID) 2.273876337549111
[Debug] SourceBuffer::sourceBufferPrivateAppendComplete(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) progress
[Debug] HTMLMediaElement::dispatchEvent(SOMEID) stalled
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)
[Log] HTMLMediaElement::updateMediaPlayer(SOMEID)